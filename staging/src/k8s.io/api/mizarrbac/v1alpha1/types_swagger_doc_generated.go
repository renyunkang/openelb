/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-generated-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE. DO NOT EDIT.
var map_AggregationRule = map[string]string{
	"":                    "AggregationRule describes how to locate GlobalRoles to aggregate into the GlobalRole",
	"globalRoleSelectors": "GlobalRoleSelectors holds a list of selectors which will be used to find GlobalRoles and create the rules. If any of the selectors match, then the GlobalRole's permissions will be added",
}

func (AggregationRule) SwaggerDoc() map[string]string {
	return map_AggregationRule
}

var map_GlobalRole = map[string]string{
	"":                 "GlobalRole is a global level, logical grouping of PolicyRules",
	"regionSelectors":  "RegionSelectors is a selector list of regions this rule applies to.",
	"clusterSelectors": "ClusterSelectors is a selector list of clusters this rule applies to.",
	"rules":            "Rules holds all the PolicyRules for this GlobalRole",
	"aggregationRule":  "AggregationRule is an optional field that describes how to build the Rules for this GlobalRole. If AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be stomped by the controller.",
}

func (GlobalRole) SwaggerDoc() map[string]string {
	return map_GlobalRole
}

var map_GlobalRoleBinding = map[string]string{
	"":         "GlobalRoleBinding references a GlobalRole, but not contain it.  It can reference a GlobalRole in the global namespace, and adds who information via Subject.",
	"metadata": "Standard object's metadata.",
	"subjects": "Subjects holds references to the objects the role applies to.",
	"roleRef":  "RoleRef can only reference a GlobalRole in the global namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.",
}

func (GlobalRoleBinding) SwaggerDoc() map[string]string {
	return map_GlobalRoleBinding
}

var map_GlobalRoleBindingList = map[string]string{
	"": "GlobalRoleBindingList contains a list of GlobalRoleBinding",
}

func (GlobalRoleBindingList) SwaggerDoc() map[string]string {
	return map_GlobalRoleBindingList
}

var map_GlobalRoleList = map[string]string{
	"": "GlobalRoleList contains a list of GlobalRole",
}

func (GlobalRoleList) SwaggerDoc() map[string]string {
	return map_GlobalRoleList
}

// AUTO-GENERATED FUNCTIONS END HERE
