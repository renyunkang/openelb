/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// FeaturesApplyConfiguration represents an declarative configuration of the Features type for use
// with apply.
type FeaturesApplyConfiguration struct {
	RebootPod              *bool                             `json:"rebootPod,omitempty"`
	ForceDriftPod          *bool                             `json:"forceDriftPod,omitempty"`
	PausePod               *bool                             `json:"pausePod,omitempty"`
	DriftPod               *bool                             `json:"driftPod,omitempty"`
	RebootPodTimestamp     *string                           `json:"rebootPodTimestamp,omitempty"`
	ForceDriftPodTimestamp *string                           `json:"forceDriftPodTimestamp,omitempty"`
	PreResizePod           *ResizeResourceApplyConfiguration `json:"preResizePod,omitempty"`
	ResizePod              *ResizeResourceApplyConfiguration `json:"resizePod,omitempty"`
	DelayUpdatePod         *bool                             `json:"delayUpdatePod,omitempty"`
}

// FeaturesApplyConfiguration constructs an declarative configuration of the Features type for use with
// apply.
func Features() *FeaturesApplyConfiguration {
	return &FeaturesApplyConfiguration{}
}

// WithRebootPod sets the RebootPod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RebootPod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithRebootPod(value bool) *FeaturesApplyConfiguration {
	b.RebootPod = &value
	return b
}

// WithForceDriftPod sets the ForceDriftPod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ForceDriftPod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithForceDriftPod(value bool) *FeaturesApplyConfiguration {
	b.ForceDriftPod = &value
	return b
}

// WithPausePod sets the PausePod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PausePod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithPausePod(value bool) *FeaturesApplyConfiguration {
	b.PausePod = &value
	return b
}

// WithDriftPod sets the DriftPod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DriftPod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithDriftPod(value bool) *FeaturesApplyConfiguration {
	b.DriftPod = &value
	return b
}

// WithRebootPodTimestamp sets the RebootPodTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RebootPodTimestamp field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithRebootPodTimestamp(value string) *FeaturesApplyConfiguration {
	b.RebootPodTimestamp = &value
	return b
}

// WithForceDriftPodTimestamp sets the ForceDriftPodTimestamp field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ForceDriftPodTimestamp field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithForceDriftPodTimestamp(value string) *FeaturesApplyConfiguration {
	b.ForceDriftPodTimestamp = &value
	return b
}

// WithPreResizePod sets the PreResizePod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PreResizePod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithPreResizePod(value *ResizeResourceApplyConfiguration) *FeaturesApplyConfiguration {
	b.PreResizePod = value
	return b
}

// WithResizePod sets the ResizePod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResizePod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithResizePod(value *ResizeResourceApplyConfiguration) *FeaturesApplyConfiguration {
	b.ResizePod = value
	return b
}

// WithDelayUpdatePod sets the DelayUpdatePod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DelayUpdatePod field is set to the value of the last call.
func (b *FeaturesApplyConfiguration) WithDelayUpdatePod(value bool) *FeaturesApplyConfiguration {
	b.DelayUpdatePod = &value
	return b
}
