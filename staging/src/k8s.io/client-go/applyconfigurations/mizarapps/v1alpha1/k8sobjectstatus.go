/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/core/v1"
)

// K8SObjectStatusApplyConfiguration represents an declarative configuration of the K8SObjectStatus type for use
// with apply.
type K8SObjectStatusApplyConfiguration struct {
	Reference     *v1.ObjectReferenceApplyConfiguration `json:"reference,omitempty"`
	Scheduled     *bool                                 `json:"scheduled,omitempty"`
	Ready         *bool                                 `json:"ready,omitempty"`
	Deleted       *bool                                 `json:"deleted,omitempty"`
	Replicas      *int32                                `json:"replica,omitempty"`
	ReadyReplicas *int32                                `json:"readyReplicas,omitempty"`
}

// K8SObjectStatusApplyConfiguration constructs an declarative configuration of the K8SObjectStatus type for use with
// apply.
func K8SObjectStatus() *K8SObjectStatusApplyConfiguration {
	return &K8SObjectStatusApplyConfiguration{}
}

// WithReference sets the Reference field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reference field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithReference(value *v1.ObjectReferenceApplyConfiguration) *K8SObjectStatusApplyConfiguration {
	b.Reference = value
	return b
}

// WithScheduled sets the Scheduled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scheduled field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithScheduled(value bool) *K8SObjectStatusApplyConfiguration {
	b.Scheduled = &value
	return b
}

// WithReady sets the Ready field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ready field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithReady(value bool) *K8SObjectStatusApplyConfiguration {
	b.Ready = &value
	return b
}

// WithDeleted sets the Deleted field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Deleted field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithDeleted(value bool) *K8SObjectStatusApplyConfiguration {
	b.Deleted = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithReplicas(value int32) *K8SObjectStatusApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithReadyReplicas sets the ReadyReplicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ReadyReplicas field is set to the value of the last call.
func (b *K8SObjectStatusApplyConfiguration) WithReadyReplicas(value int32) *K8SObjectStatusApplyConfiguration {
	b.ReadyReplicas = &value
	return b
}
