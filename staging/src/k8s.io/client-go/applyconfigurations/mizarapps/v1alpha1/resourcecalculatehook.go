/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ResourceCalculateHookApplyConfiguration represents an declarative configuration of the ResourceCalculateHook type for use
// with apply.
type ResourceCalculateHookApplyConfiguration struct {
	URL        *string `json:"url,omitempty"`
	CABase64   *string `json:"caBase64,omitempty"`
	CertBase64 *string `json:"certBase64,omitempty"`
	KeyBase64  *string `json:"keyBase64,omitempty"`
}

// ResourceCalculateHookApplyConfiguration constructs an declarative configuration of the ResourceCalculateHook type for use with
// apply.
func ResourceCalculateHook() *ResourceCalculateHookApplyConfiguration {
	return &ResourceCalculateHookApplyConfiguration{}
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *ResourceCalculateHookApplyConfiguration) WithURL(value string) *ResourceCalculateHookApplyConfiguration {
	b.URL = &value
	return b
}

// WithCABase64 sets the CABase64 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CABase64 field is set to the value of the last call.
func (b *ResourceCalculateHookApplyConfiguration) WithCABase64(value string) *ResourceCalculateHookApplyConfiguration {
	b.CABase64 = &value
	return b
}

// WithCertBase64 sets the CertBase64 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CertBase64 field is set to the value of the last call.
func (b *ResourceCalculateHookApplyConfiguration) WithCertBase64(value string) *ResourceCalculateHookApplyConfiguration {
	b.CertBase64 = &value
	return b
}

// WithKeyBase64 sets the KeyBase64 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyBase64 field is set to the value of the last call.
func (b *ResourceCalculateHookApplyConfiguration) WithKeyBase64(value string) *ResourceCalculateHookApplyConfiguration {
	b.KeyBase64 = &value
	return b
}
