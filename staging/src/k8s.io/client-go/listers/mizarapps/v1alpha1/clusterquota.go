/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/mizarapps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterQuotaLister helps list ClusterQuotas.
// All objects returned here must be treated as read-only.
type ClusterQuotaLister interface {
	// List lists all ClusterQuotas in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterQuota, err error)
	// ClusterQuotas returns an object that can list and get ClusterQuotas.
	ClusterQuotas(namespace string) ClusterQuotaNamespaceLister
	ClusterQuotaListerExpansion
}

// clusterQuotaLister implements the ClusterQuotaLister interface.
type clusterQuotaLister struct {
	indexer cache.Indexer
}

// NewClusterQuotaLister returns a new ClusterQuotaLister.
func NewClusterQuotaLister(indexer cache.Indexer) ClusterQuotaLister {
	return &clusterQuotaLister{indexer: indexer}
}

// List lists all ClusterQuotas in the indexer.
func (s *clusterQuotaLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterQuota))
	})
	return ret, err
}

// ClusterQuotas returns an object that can list and get ClusterQuotas.
func (s *clusterQuotaLister) ClusterQuotas(namespace string) ClusterQuotaNamespaceLister {
	return clusterQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterQuotaNamespaceLister helps list and get ClusterQuotas.
// All objects returned here must be treated as read-only.
type ClusterQuotaNamespaceLister interface {
	// List lists all ClusterQuotas in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterQuota, err error)
	// Get retrieves the ClusterQuota from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ClusterQuota, error)
	ClusterQuotaNamespaceListerExpansion
}

// clusterQuotaNamespaceLister implements the ClusterQuotaNamespaceLister
// interface.
type clusterQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterQuotas in the indexer for a given namespace.
func (s clusterQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterQuota))
	})
	return ret, err
}

// Get retrieves the ClusterQuota from the indexer for a given namespace and name.
func (s clusterQuotaNamespaceLister) Get(name string) (*v1alpha1.ClusterQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusterquota"), name)
	}
	return obj.(*v1alpha1.ClusterQuota), nil
}
