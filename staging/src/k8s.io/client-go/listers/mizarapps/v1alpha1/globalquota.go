/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "k8s.io/api/mizarapps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GlobalQuotaLister helps list GlobalQuotas.
// All objects returned here must be treated as read-only.
type GlobalQuotaLister interface {
	// List lists all GlobalQuotas in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalQuota, err error)
	// GlobalQuotas returns an object that can list and get GlobalQuotas.
	GlobalQuotas(namespace string) GlobalQuotaNamespaceLister
	GlobalQuotaListerExpansion
}

// globalQuotaLister implements the GlobalQuotaLister interface.
type globalQuotaLister struct {
	indexer cache.Indexer
}

// NewGlobalQuotaLister returns a new GlobalQuotaLister.
func NewGlobalQuotaLister(indexer cache.Indexer) GlobalQuotaLister {
	return &globalQuotaLister{indexer: indexer}
}

// List lists all GlobalQuotas in the indexer.
func (s *globalQuotaLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalQuota, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalQuota))
	})
	return ret, err
}

// GlobalQuotas returns an object that can list and get GlobalQuotas.
func (s *globalQuotaLister) GlobalQuotas(namespace string) GlobalQuotaNamespaceLister {
	return globalQuotaNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlobalQuotaNamespaceLister helps list and get GlobalQuotas.
// All objects returned here must be treated as read-only.
type GlobalQuotaNamespaceLister interface {
	// List lists all GlobalQuotas in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalQuota, err error)
	// Get retrieves the GlobalQuota from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GlobalQuota, error)
	GlobalQuotaNamespaceListerExpansion
}

// globalQuotaNamespaceLister implements the GlobalQuotaNamespaceLister
// interface.
type globalQuotaNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GlobalQuotas in the indexer for a given namespace.
func (s globalQuotaNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalQuota, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalQuota))
	})
	return ret, err
}

// Get retrieves the GlobalQuota from the indexer for a given namespace and name.
func (s globalQuotaNamespaceLister) Get(name string) (*v1alpha1.GlobalQuota, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("globalquota"), name)
	}
	return obj.(*v1alpha1.GlobalQuota), nil
}
